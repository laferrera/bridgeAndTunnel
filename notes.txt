TODO

    to mess around
    https://codesandbox.io/s/retejs-react-render-t899c?file=/src/rete.jsx:1619-1940    

    menu    
        save
        load https://gist.github.com/whoisryosuke/ab0ee89e878c48947fe7fd8eedb8431f
        preferences
            osc ip / port
            color theme
    renderer

    more    
        kill all button https://codepen.io/hatead1/pen/mdEVRdJ



look into
    electorn-window-state
    electron-context-menu
    electron-settings
    electron before quit
        turn off grid
        disconnect crow
    determine usb plugged in
        https://github.com/MadLittleMods/node-usb-detection
    autosave every x actions? seconds?
    also save history....

visual programming https://github.com/retejs/rete

interprocess communication
    https://www.electronjs.org/docs/latest/tutorial/ipc


models
    node
    route
    
nodes (source )
    midi in /out 
    osc in / out
    grid 
    crow
    clock 
    ableton link
    
node (effect)
    math
    quantizer
    random
    sequencer

osc settings
    ip
    port
    min
    max
    pattern
    curve

midi settings
    type
        note #
        note name
        cc
        input 
            virtual port
            other devices            
    message type
        hold
        on/off
    channel
        1-16
    mpe
        ......
    


  editor.on('connectioncreated', ({ output, input }) => {
    const actOut = output.node.outputs.get("actOut");
    const actIn = input.node.inputs.get("actIn");
    if (!actOut.connectedTo(actIn)){
      editor.connect(actOut, actIn);
    }
  });

  editor.on('connectionremoved', ({ output, input }) => {
    let shouldRemove = true;
    output.node.getConnections().forEach((connection) => {
      if (connection.output.node.id === input.node.id) {
        shouldRemove = false;
      }
    });
    if (shouldRemove) {
      const actOut = output.node.outputs.get("actOut");
      const actIn = input.node.inputs.get("actIn");
      if (!actOut.connectedTo(actIn)) {
        editor.removeConnection(actOut, actIn);
      }
    }
  });